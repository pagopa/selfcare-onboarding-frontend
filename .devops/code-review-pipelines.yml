# Azure DevOps pipeline to build, check source codes and run tests.
#
# To make Danger JS run on a pull request you need to add the following pipeline
# variable and set it with a GitHub access token (scope public_repo); otherwise
# set its value to 'skip' without marking it secret:
# - DANGER_GITHUB_API_TOKEN
#

variables:
  NODE_VERSION: '16.10.0'
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  # Execute agents (jobs) on latest Ubuntu version.
  vmImageNameDefault: 'ubuntu-latest'

# Automatically triggered on PR
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema#pr-trigger
trigger:
  branches:
    include:
      - main
      - release-*

resources:
  repositories:
    - repository: pagopaCommons
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v18
      endpoint: 'io-azure-devops-github-ro'
    - repository: selfcareCommon
      type: github
      name: pagopa/selfcare-common-frontend
      ref: refs/heads/main
      endpoint: 'io-azure-devops-github-ro'

# Execute agents (jobs) on latest Ubuntu version.
# To change OS for a specific, ovverride "pool" attribute inside the job definition
pool:
  vmImage: '$(vmImageNameDefault)'

stages:
  - stage: Build
    dependsOn: []
    jobs:
      - job: make_build
        steps:
          - template: .devops/azure-templates/setup-yarn-cache.yml@selfcareCommon
          - template: templates/node-job-setup/template.yaml@pagopaCommons
            parameters:
              nodeVersion: $(NODE_VERSION)
          - script: |
              yarn build
            displayName: 'Build'

  - stage: Static_analysis
    dependsOn: []
    jobs:
      - job: lint
        steps:
          - template: .devops/azure-templates/setup-yarn-cache.yml@selfcareCommon
          - template: templates/node-job-setup/template.yaml@pagopaCommons
            parameters:
              nodeVersion: $(NODE_VERSION)
          - script: |
              yarn lint
            displayName: 'Lint'

      - job: danger
        condition: and(
          succeeded(),
          ne(variables['DANGER_GITHUB_API_TOKEN'], 'skip')
          )
        steps:
          - template: .devops/azure-templates/setup-yarn-cache.yml@selfcareCommon
          - template: templates/node-job-setup/template.yaml@pagopaCommons
            parameters:
              nodeVersion: $(NODE_VERSION)

          - bash: |
              yarn danger ci
            env:
              DANGER_GITHUB_API_TOKEN: '$(DANGER_GITHUB_API_TOKEN)'
            displayName: 'Danger CI'

  # B) Run unit tests if there is a push or pull request on any branch.
  - stage: Test
    dependsOn: []
    jobs:
      - job: unit_tests
        steps:
          - template: .devops/azure-templates/setup-yarn-cache.yml@selfcareCommon
          - template: templates/node-job-setup/template.yaml@pagopaCommons
            parameters:
              nodeVersion: $(NODE_VERSION)

          - script: |
              yarn test:coverage --watchAll=false
            displayName: 'Unit tests exec'

  # Task: Prepare the environment for SonarCloud analysis
  # This step sets up the connection with SonarCloud, specifying the organization,
  # project key, and other required parameters for the analysis.
  - task: SonarCloudPrepare@1
    displayName: 'Prepare SonarCloud analysis configuration'
    inputs:
      SonarCloud: '$(SONARCLOUD_SERVICE_CONN)'
      organization: '$(SONARCLOUD_ORG)'
      scannerMode: Other
      extraProperties: |
        sonar.projectKey=$(SONARCLOUD_PROJECT_KEY)
        sonar.projectName=$(SONARCLOUD_PROJECT_NAME)
        sonar.exclusions='src/locale/**'

  # Task: Publish the SonarCloud results
  # This step ensures that the analysis results are published back to SonarCloud.
  # It allows for tracking issues and ensuring quality gates are respected.
  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
